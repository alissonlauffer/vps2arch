name: VPS2Arch CI

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Cache QEMU image and SSH key
        uses: actions/cache@v4
        with:
          path: |
            debian-12-nocloud-amd64.qcow2
            id_rsa
          key: vps2arch-cache-${{ github.run_id }}
          restore-keys: |
            vps2arch-cache-

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo DEBIAN_FRONTEND=noninteractive apt-get -o Acquire::Retires=10 install --no-install-recommends -qq libguestfs-tools busybox linux-image-amd64 gnupg1 openssh-client curl qemu-utils

      - name: Generate SSH key
        run: |
          ssh-keygen -q -N '' -f ~/.ssh/id_rsa

      - name: Build QEMU image
        run: |
          curl -fOL https://cdimage.debian.org/cdimage/cloud/bookworm/latest/debian-12-nocloud-amd64.qcow2
          sudo qemu-img create -f qcow2 -o preallocation=metadata newdisk.qcow2 4G
          sudo LIBGUESTFS_BACKEND=direct virt-resize --expand /dev/sda1 debian-12-nocloud-amd64.qcow2 newdisk.qcow2
          sudo mv newdisk.qcow2 debian-12-nocloud-amd64.qcow2
          sudo LIBGUESTFS_BACKEND=direct virt-customize -a debian-12-nocloud-amd64.qcow2 --root-password password:root --ssh-inject root --install wget,ca-certificates,openssh-server --firstboot-command "dpkg-reconfigure -f noninteractive openssh-server"

      - name: Save SSH key
        run: |
          mv ~/.ssh/id_rsa id_rsa

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: qemu-image
          path: |
            debian-12-nocloud-amd64.qcow2
            id_rsa
          retention-days: 1

  test-bios:
    runs-on: ubuntu-latest
    container: debian:stable
    needs: build
    strategy:
      matrix:
        test_type: [default, netctl, syslinux]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: qemu-image

      - name: Install test dependencies
        run: |
          sudo apt-get update -y
          sudo DEBIAN_FRONTEND=noninteractive apt-get -o Acquire::Retires=10 install --no-install-recommends -qq qemu-system-x86 openssh-client sshpass

      - name: Setup SSH
        run: |
          mkdir ~/.ssh
          mv id_rsa ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          printf '%s\n\t' 'Host *' 'ServerAliveInterval 15' 'UserKnownHostsFile /dev/null' 'StrictHostKeyChecking no' 'CheckHostIP no' > ~/.ssh/config

      - name: Start QEMU VM
        run: |
          sudo qemu-system-x86_64 -m 4096 -smp 2 -enable-kvm -daemonize -drive file=debian-12-nocloud-amd64.qcow2,if=virtio -net nic -net user,hostfwd=tcp::10022-:22 -display none -vga none -serial file:/tmp/serial
          tail -f /tmp/serial &
          sleep 120

      - name: Copy vps2arch script
        run: |
          scp -P 10022 vps2arch root@127.0.0.1:vps2arch
          ssh -p 10022 root@127.0.0.1 "chmod +x vps2arch"

      - name: Run test (${{ matrix.test_type }})
        run: |
          if [ "${{ matrix.test_type }}" = "default" ]; then
            ssh -p 10022 root@127.0.0.1 "./vps2arch && sync ; reboot -f" || true
          elif [ "${{ matrix.test_type }}" = "netctl" ]; then
            ssh -p 10022 root@127.0.0.1 "./vps2arch -n netctl && sync ; reboot -f" || true
          elif [ "${{ matrix.test_type }}" = "syslinux" ]; then
            ssh -p 10022 root@127.0.0.1 "./vps2arch -b syslinux && sync ; reboot -f" || true
          fi
          sleep 600
          sshpass -proot ssh -p 10022 root@127.0.0.1 test -f /etc/arch-release

  test-uefi:
    runs-on: ubuntu-latest
    container: debian:stable
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: qemu-image

      - name: Install test dependencies
        run: |
          sudo apt-get update -y
          sudo DEBIAN_FRONTEND=noninteractive apt-get -o Acquire::Retires=10 install --no-install-recommends -qq qemu-system-x86 openssh-client ovmf sshpass

      - name: Setup SSH
        run: |
          mkdir ~/.ssh
          mv id_rsa ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          printf '%s\n\t' 'Host *' 'ServerAliveInterval 15' 'UserKnownHostsFile /dev/null' 'StrictHostKeyChecking no' 'CheckHostIP no' > ~/.ssh/config

      - name: Start QEMU VM (UEFI)
        run: |
          sudo qemu-system-x86_64 -m 4096 -smp 2 -enable-kvm -daemonize -bios /usr/share/OVMF/OVMF_CODE.fd -drive file=debian-12-nocloud-amd64.qcow2,if=virtio -net nic -net user,hostfwd=tcp::10022-:22 -display none -vga none -serial file:/tmp/serial
          tail -f /tmp/serial &
          sleep 120

      - name: Copy vps2arch script
        run: |
          scp -P 10022 vps2arch root@127.0.0.1:vps2arch
          ssh -p 10022 root@127.0.0.1 "chmod +x vps2arch"

      - name: Run UEFI test
        run: |
          ssh -p 10022 root@127.0.0.1 "./vps2arch && sync ; reboot -f" || true
          sleep 600
          sshpass -proot ssh -p 10022 root@127.0.0.1 test -f /etc/arch-release
